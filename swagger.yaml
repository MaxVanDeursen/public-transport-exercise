swagger: "2.0"
info:
  version: "1.0.0"
  title: "Public Transport API"
host: "localhost:8080"
basePath: "/"
tags:
  - name: "travelers"
    description: "Access to traveler information"
  - name: "tickets"
    description: "Access to Ticket verification"
schemes:
  - "https"
  - "http"
paths:
  /travelers:
    post:
      tags:
        - "travelers"
      summary: "Add a new Traveler"
      description: ""
      operationId: "addTraveler"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Traveler object that needs to be added"
          required: true
          schema:
            $ref: "#/definitions/Username"
      responses:
        "201":
          description: "Correct creation"
          schema:
            $ref: "#/definitions/Traveler"
        "400":
          description: "Invalid input; Username not supplied"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /travelers/{travelerId}/createTicket:
    post:
      tags:
        - "travelers"
      summary: "Add a new ticket for the specified traveler"
      description: ""
      operationId: "addTravelerTicket"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Traveler object that needs to be added"
          required: true
          schema:
            $ref: "#/definitions/Date"
        - name: "travelerId"
          in: "path"
          description: "ID of the traveler for which the ticket should be created"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "201":
          description: "Correct creation"
          schema:
            $ref: "#/definitions/Ticket"
        "400":
          description: "Invalid input."
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: "Traveler cannot be found."
          schema:
            $ref: "#/definitions/ErrorResponse"
  /tickets/{ticketId}/verify:
    get:
      tags:
        - "tickets"
      summary: "Verify the ticket on whether it can be used."
      description: ""
      operationId: "verifyTicket"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "ticketId"
          in: "path"
          description: "ID of the ticket to verify"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "Ticket can be used"
        "401":
          description: "Ticket cannot be used"
        "404":
          description: "Ticket not found."
          schema:
            $ref: "#/definitions/ErrorResponse"
definitions:
  Date:
    type: "object"
    properties:
      date:
        type: "string"
  ErrorResponse:
    type: "object"
    properties:
      message:
        type: "integer"
        format: "int32"
      timestamp:
        type: "string"
  Username:
    type: "object"
    properties:
      username:
        type: "string"
  Traveler:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      credit:
        type: "integer"
        format: "int64"
  Ticket:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      date:
        type: "string"
      cost:
        type: "integer"
        format: "int64"
      traveler:
        $ref: "#/definitions/Traveler"